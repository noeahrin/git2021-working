{"version":3,"sources":["domain/contact/Contact.tsx"],"names":["Contact","useState","id","name","phone","email","contactList","setContactList","nameInputRef","useRef","phoneInputRef","emailInputRef","formRef","tableRef","tbodyTr","current","querySelectorAll","edit","length","mod","produce","state","item","find","isEdit","className","ref","onSubmit","e","preventDefault","type","placeholder","onClick","value","contact","unshift","reset","add","style","width","colSpan","map","index","defaultValue","inputName","inputPhone","inputEmail","save","splice","del"],"mappings":"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","file":"static/js/3.b2c98dfe.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport produce from \"immer\";\r\nimport { createNoSubstitutionTemplateLiteral } from \"typescript\";\r\n\r\ninterface ContactState {\r\n  id: number;\r\n  name: string | undefined;\r\n  phone: string | undefined;\r\n  email: string | undefined;\r\n  createTime?: number;\r\n  isEdit?: boolean;\r\n}\r\n\r\n// const getTimeString = (unixtime: number) => {\r\n//   const dateTime = new Date(unixtime);\r\n//   return `${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString()}`;\r\n// };\r\n\r\nconst Contact = () => {\r\n  const [contactList, setContactList] = useState<ContactState[]>([\r\n    { id: 2, name: \"Jhon\", phone: \"010-1234-5678\", email: \"John@gmail.com\" },\r\n    { id: 1, name: \"Smith\", phone: \"010-1111-2222\", email: \"Smith@gmail.com\" },\r\n  ]);\r\n\r\n  const nameInputRef = useRef<HTMLInputElement>(null);\r\n  const phoneInputRef = useRef<HTMLInputElement>(null);\r\n  const emailInputRef = useRef<HTMLInputElement>(null);\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n  const tableRef = useRef<HTMLTableElement>(null);\r\n\r\n\r\n\r\n  const tbodyTr = tableRef.current?.querySelectorAll(\"tr\");\r\n  const tbodyTrNum = tbodyTr?.length;\r\n\r\n\r\n\r\n  const add = () => {\r\n    if (nameInputRef.current?.value && phoneInputRef.current?.value && emailInputRef.current?.value) {\r\n      const contact: ContactState = {\r\n        id: contactList.length > 0 ? contactList[0].id + 1 : 1,\r\n        name: nameInputRef.current?.value,\r\n        phone: phoneInputRef.current?.value,\r\n        email: emailInputRef.current?.value,\r\n      };\r\n\r\n      setContactList(\r\n        produce((state) => {\r\n          state.unshift(contact);\r\n        })\r\n      );\r\n      formRef.current?.reset();\r\n    };\r\n  }\r\n\r\n  const del = (id: number, index: number) => {\r\n    setContactList(\r\n      produce((state) => {\r\n        state.splice(index, 1);\r\n        // console.log(contactList[0].id);\r\n        // 삭제후 id 재정렬\r\n        state.map((item, index) => (\r\n          item.id = contactList[0].id - index - 1\r\n        ))\r\n      })\r\n    );\r\n  };\r\n\r\n  const edit = (id: number, mod: boolean) => {\r\n    setContactList(\r\n      produce((state) => {\r\n        // 해당 id값에 해당하는 요소를 찾음\r\n        const item = state.find((item) => item.id === id);\r\n        if (item) {\r\n          item.isEdit = mod;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const save = (id: number, index: number) => {\r\n\r\n    // item index와 input index가 일치하지 않아서\r\n\r\n    // 방법 1\r\n    // item index와 tr index가 같아서 tr 안에서 input을 찾아야함\r\n    // tr이 thead tbody tfoot에 총 3개 있음\r\n    const inputName = tableRef.current?.querySelectorAll(\"tr\")[index + 1].querySelectorAll(\"input\")[0];\r\n    const inputPhone = tableRef.current?.querySelectorAll(\"tr\")[index + 1].querySelectorAll(\"input\")[1];\r\n    const inputEmail = tableRef.current?.querySelectorAll(\"tr\")[index + 1].querySelectorAll(\"input\")[2];\r\n\r\n    // 방법 2\r\n    // td에서 input 찾음\r\n    // const inputName = tableRef.current?.querySelectorAll(\"td\")[6 * index + 1].querySelector(\"input\");\r\n    // const inputPhone = tableRef.current?.querySelectorAll(\"td\")[6 * index + 2].querySelector(\"input\");\r\n    // const inputEmail = tableRef.current?.querySelectorAll(\"td\")[6 * index + 3].querySelector(\"input\");\r\n    // console.log(index);\r\n    // console.log(inputName);\r\n    // console.log(inputPhone);\r\n    // console.log(inputEmail);\r\n\r\n    setContactList(\r\n      produce((state) => {\r\n        const item = state.find((item,) => item.id === id);\r\n        if (item) {\r\n          item.name = inputName?.value;\r\n          item.phone = inputPhone?.value;\r\n          item.email = inputEmail?.value;\r\n          item.isEdit = false;\r\n        }\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center my-5\">Contact</h2>\r\n      <form className=\"d-flex\" ref={formRef} onSubmit={(e) => e.preventDefault()}>\r\n        <input type=\"text\" className=\"form-control me-1\" placeholder=\"이름\" ref={nameInputRef} />\r\n        <input type=\"text\" className=\"form-control me-1\" placeholder=\"전화번호\" ref={phoneInputRef} />\r\n        <input type=\"text\" className=\"form-control me-2\" placeholder=\"이메일\" ref={emailInputRef} />\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary text-nowrap\"\r\n          onClick={() => {\r\n            add();\r\n          }}\r\n        >\r\n          추가\r\n        </button>\r\n      </form>\r\n\r\n      <table className=\"table table-striped table-hover mt-5\" ref={tableRef}>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"50px\" }}>#</th>\r\n            <th style={{ width: \"80px\" }}>이름</th>\r\n            <th style={{ width: \"130px%\" }}>전화번호</th>\r\n            <th style={{ width: \"150px\" }}>이메일</th>\r\n            <th colSpan={2} style={{ width: \"80px\" }}>작업</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tbody\">\r\n          {contactList.map((item, index) => (\r\n            <tr className=\"tbody-tr\" key={item.id}>\r\n              <td className=\"me-1\" style={{ width: \"50px\" }}>\r\n                {item.id}\r\n\r\n              </td>\r\n              <td className=\"me-1\" style={{ width: \"80px\" }}>\r\n                {\r\n                  item.isEdit\r\n                    ? <input type=\"text\" className=\"txt-name\" defaultValue={item.name} />\r\n                    : item.name\r\n                }\r\n              </td>\r\n              <td className=\"me-1\" style={{ width: \"140px\" }}>\r\n                {\r\n                  item.isEdit\r\n                    ? <input type=\"text\" className=\"txt-phone\" defaultValue={item.phone} />\r\n                    : item.phone\r\n                }\r\n              </td>\r\n              <td className=\"me-1\" style={{ width: \"150px\" }}>\r\n                {\r\n                  item.isEdit\r\n                    ? <input type=\"text\" className=\"txt-email\" defaultValue={item.email} />\r\n                    : item.email\r\n                }\r\n              </td>\r\n              <td className=\"me-1\" style={{ width: \"35px\" }}>\r\n                {!item.isEdit && (\r\n                  <button\r\n                    className=\"btn btn-outline-secondary btn-sm ms-2 me-1 text-nowrap\"\r\n                    onClick={() => {\r\n                      edit(item.id, true);\r\n                    }}\r\n                  >\r\n                    수정\r\n                  </button>\r\n                )}\r\n                {item.isEdit && (\r\n                  <button\r\n                    className=\"btn btn-outline-secondary btn-sm ms-2 me-1 text-nowrap\"\r\n                    onClick={() => {\r\n                      save(item.id, index);\r\n                    }}\r\n                  >\r\n                    저장\r\n                  </button>\r\n                )}\r\n              </td>\r\n              <td className=\"me-1\" style={{ width: \"30px\" }}>\r\n                {!item.isEdit && (\r\n                  <button\r\n                    className=\"btn btn-outline-secondary btn-sm text-nowrap\"\r\n                    onClick={() => {\r\n                      del(item.id, index);\r\n                    }}\r\n                  >\r\n                    삭제\r\n                  </button>\r\n                )}\r\n\r\n                {item.isEdit && (\r\n                  <button\r\n                    className=\"btn btn-outline-secondary btn-sm text-nowrap\"\r\n                    onClick={() => {\r\n                      edit(item.id, false);\r\n                    }}\r\n                  >\r\n                    취소\r\n                  </button>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            {/* <td colSpan={5} className=\"text-center\">정보를 입력하세요.</td> */}\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"sourceRoot":""}