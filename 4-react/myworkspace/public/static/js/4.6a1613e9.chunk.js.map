{"version":3,"sources":["domain/feed/FeedEditModal.tsx","domain/feed/Feed.tsx"],"names":["FeedEditModal","dataUrl","fileType","item","onClose","onSave","profile","useSelector","state","postRef","useRef","fileRef","className","style","backgroundColor","onClick","e","stopPropagation","type","placeholder","boxSizing","height","ref","accept","current","files","length","file","reader","FileReader","readAsDataURL","onload","result","toString","undefined","console","log","add","src","width","controls","alt","display","content","feed","id","value","createTime","Date","getTime","modifyTime","username","image","save","getTimeString","unixtime","dateTime","toLocaleDateString","toLocaleTimeString","Feed","useState","feedList","setFeedList","isEdit","setIsEdit","formRef","produce","unshift","reset","editItem","find","onSubmit","preventDefault","code","map","index","fontSize","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","href","splice","del","edit"],"mappings":"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","file":"static/js/4.6a1613e9.chunk.js","sourcesContent":["\r\nimport { useRef, useState } from \"react\";\r\nimport { FeedState } from \"./type\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\n\r\n\r\ninterface ModalProp {\r\n  item: FeedState;\r\n  onClose: () => void; // 콜백함수\r\n  onSave: (editItem: FeedState) => void; // 콜백함수\r\n}\r\n\r\nconst FeedEditModal = ({ item, onClose, onSave }: ModalProp) => {\r\n\r\n  const profile = useSelector((state: RootState) => state.profile);\r\n\r\n  const postRef = useRef<HTMLTextAreaElement>(null);\r\n  const fileRef = useRef<HTMLInputElement>(null);\r\n  let dataUrl: string | undefined;\r\n  let fileType: string | undefined;\r\n\r\n  const add = (e: React.KeyboardEvent<HTMLInputElement> | null) => {\r\n    if (fileRef.current?.files?.length == 1) {\r\n      const file = fileRef.current?.files[0];\r\n      // console.log(file);\r\n\r\n      const reader = new FileReader();\r\n      // console.log(fileRef.current?.files);\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        dataUrl = reader.result?.toString();\r\n        fileType = file.type;\r\n\r\n      };\r\n    } else {\r\n      dataUrl = undefined;\r\n      fileType = undefined;\r\n    }\r\n    console.log(fileRef.current?.files?.length);\r\n    console.log(dataUrl);\r\n  };\r\n\r\n  const save = () => {\r\n    const feed: FeedState = {\r\n      id: item.id,\r\n      content: postRef.current?.value, // 수정된 입력값\r\n      dataUrl: dataUrl,\r\n      fileType: fileType,\r\n      createTime: new Date().getTime(),\r\n      modifyTime: new Date().getTime(),\r\n      username: profile.username,\r\n      image: profile.image,\r\n    };\r\n\r\n    onSave(feed);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"modal d-block\"\r\n      style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}\r\n      onClick={() => {\r\n        onClose();\r\n      }}\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">EDIT FEED</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => {\r\n                onClose();\r\n              }}\r\n            ></button>\r\n          </div>\r\n          <textarea\r\n            className=\"form-control mb-1\"\r\n            placeholder=\"Leave a post here\"\r\n            style={{ boxSizing: \"border-box\", height: \"15vh\" }}\r\n            ref={postRef}\r\n          />\r\n          <div className=\"d-flex\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              accept=\"image/png, image/jpeg, video/mp4\"\r\n              ref={fileRef}\r\n            />\r\n            <button\r\n              className=\"btn btn-primary text-nowrap ms-1\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                add(null);\r\n              }}\r\n            >\r\n              입력\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"media text-center mt-4\">\r\n\r\n            <span>\r\n              {\r\n                item.fileType === \"video/mp4\"\r\n                  ? <video src={item.dataUrl} style={{ width: \"80%\" }} controls />\r\n                  : item.fileType === \"image/jpeg\" || item.fileType === \"image/png\"\r\n                    ? <img src={item.dataUrl} alt=\"feed\" style={{ width: \"80%\" }} />\r\n                    : <img src={item.dataUrl} alt=\"feed\" style={{ display: \"none\" }} />\r\n              }\r\n\r\n            </span>\r\n          </div>\r\n          <p className=\"card-text\">{item.content}</p>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => {\r\n                onClose();\r\n              }}\r\n            >\r\n              닫기\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                save();\r\n              }}\r\n            >\r\n              저장\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedEditModal;","import { useRef, useState } from \"react\";\r\n\r\nimport produce from \"immer\";\r\n\r\nimport FeedEditModal from \"./FeedEditModal\";\r\nimport { FeedState } from \"./type\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\n\r\nconst getTimeString = (unixtime: number) => {\r\n  // 1초: 1000\r\n  // 1분: 60 * 1000\r\n  // 1시간: 60 * 60 * 1000\r\n  // 1일: 24 * 60 * 60 * 1000\r\n  const day = 24 * 60 * 60 * 1000;\r\n\r\n  // Locale: timezone, currency 등\r\n  // js에서는 브라우저의 정보를 이용함\r\n  const dateTime = new Date(unixtime);\r\n\r\n  // 현재시간보다 24시간 이전이면 날짜를 보여주고\r\n  // 현재시간보다 24시간 미만이면 시간을 보여줌\r\n  return unixtime - new Date().getTime() >= day\r\n    ? dateTime.toLocaleDateString()\r\n    : dateTime.toLocaleTimeString();\r\n};\r\n\r\nconst Feed = () => {\r\n\r\n  // profile state를 가지고 옴 + state가 변경되면 컴포넌트를 업데이트(비교하고 + reder)함\r\n  const profile = useSelector((state: RootState) => state.profile);\r\n\r\n  const [feedList, setFeedList] = useState<FeedState[]>([]);\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  // const [isError, setIsError] = useState(false);\r\n  const postRef = useRef<HTMLTextAreaElement>(null);\r\n  const fileRef = useRef<HTMLInputElement>(null);\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n\r\n  const content = (dataUrl: string | undefined, fileType: string | undefined) => {\r\n\r\n    const feed: FeedState = {\r\n      id: feedList.length > 0 ? feedList[0].id + 1 : 1,\r\n      // optional chaning\r\n      content: postRef.current?.value,\r\n      dataUrl: dataUrl,\r\n      fileType: fileType,\r\n      username: profile.username,\r\n      image: profile.image,\r\n      createTime: new Date().getTime(),\r\n      modifyTime: new Date().getTime(),\r\n    };\r\n\r\n    // setFeedList([feed, ...feedList]);\r\n    setFeedList(\r\n      produce((state) => {\r\n        state.unshift(feed);\r\n      })\r\n    )\r\n\r\n    formRef.current?.reset();\r\n\r\n    // setIsError(false);\r\n    // console.log(fileType);\r\n  };\r\n\r\n  const add = (e: React.KeyboardEvent<HTMLInputElement> | null) => {\r\n\r\n\r\n\r\n    // 이벤트 객체가 있을 때는 입력박스에서 엔터 입력\r\n    if (e) {\r\n      if (e.code !== \"Enter\") return;\r\n    }\r\n\r\n    // console.log(fileRef.current?.files?.length);\r\n    // file이 있어도 선택 안하면 length가 0\r\n    if (fileRef.current?.files?.length === 1) {\r\n      const file = fileRef.current?.files[0];\r\n      const reader = new FileReader();\r\n      // console.log(fileRef.current?.files);\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        content(reader.result?.toString(), file.type);\r\n      };\r\n    } else {\r\n      content(undefined, undefined);\r\n    }\r\n\r\n    // if (!postRef.current?.value || !fileRef.current?.files) {\r\n    //   setIsError(true);\r\n    //   return;\r\n    // }\r\n  }\r\n\r\n  const del = (id: number, index: number) => {\r\n    // setFeedList(feedList.filter((item) => item.id !== id));\r\n    setFeedList(\r\n      produce((state) => {\r\n        state.splice(index, 1)\r\n      })\r\n    )\r\n  };\r\n  const editItem = useRef<FeedState>(\r\n    {\r\n      id: 0,\r\n      content: \"\",\r\n      createTime: 0,\r\n      dataUrl: \"\",\r\n      fileType: \"\",\r\n      modifyTime: 0,\r\n    }\r\n  );\r\n  const edit = (item: FeedState) => {\r\n    editItem.current = item;\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const save = (editItem: FeedState) => {\r\n    console.log(editItem);\r\n    setFeedList(\r\n      produce((state) => {\r\n        const item = state.find((item) => item.id === editItem.id);\r\n        if (item) {\r\n          item.content = editItem.content;\r\n          item.dataUrl = editItem.dataUrl;\r\n          item.fileType = editItem.fileType;\r\n          item.modifyTime = editItem.createTime;\r\n          item.username = editItem.username;\r\n          item.image = editItem.image;\r\n        }\r\n\r\n      })\r\n    );\r\n    // 모달창 닫기\r\n    setIsEdit(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ width: \"40vw\" }} className=\"mx-auto\">\r\n      {/* immer */}\r\n      <h2 className=\"text-center my-5\">Feeds</h2>\r\n      {isEdit && (\r\n        <FeedEditModal\r\n          item={editItem.current}\r\n          onClose={() => {\r\n            setIsEdit(false);\r\n          }}\r\n          onSave={(editItem) => {\r\n            save(editItem);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <form\r\n        className=\"mt-5\"\r\n        ref={formRef}\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <textarea\r\n          className=\"form-control mb-1\"\r\n          placeholder=\"Leave a post here\"\r\n          style={{ boxSizing: \"border-box\", height: \"15vh\" }}\r\n          ref={postRef}\r\n        />\r\n        <div className=\"d-flex\">\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            accept=\"image/png, image/jpeg, video/mp4\"\r\n            ref={fileRef}\r\n          />\r\n          <button\r\n            className=\"btn btn-primary text-nowrap ms-1\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              add(null);\r\n            }}\r\n          >\r\n            입력\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"mt-1\" >\r\n        {feedList.map((item, index) => (\r\n          <div className=\"card mt-1\" key={index}>\r\n            <div className=\"card-header\">\r\n              <span style={{ fontSize: \"0.75rem\" }}>\r\n                <img\r\n                  src={item.image}\r\n                  style={{\r\n                    width: \"24px\",\r\n                    height: \"24px\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                    borderRadius: \"50%\"\r\n                  }}\r\n                  alt={profile.username}\r\n                />\r\n                - {item.username}\r\n                {\" 수정시간: \"}{getTimeString(item.modifyTime)}\r\n\r\n              </span>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"media\">\r\n                {\r\n                  item.fileType === \"video/mp4\"\r\n                    ? <video src={item.dataUrl} style={{ width: \"100%\" }} controls />\r\n                    : item.fileType === \"image/jpeg\" || item.fileType === \"image/png\"\r\n                      ? <img src={item.dataUrl} alt=\"feed\" style={{ width: \"100%\" }} />\r\n                      : <img src={item.dataUrl} alt=\"feed\" style={{ display: \"none\" }} />\r\n                }\r\n              </div>\r\n              <p className=\"card-text\">{item.content}</p>\r\n              <span className=\"text-secondary\">\r\n                {\"작성시간: \"}{getTimeString(item.createTime)}\r\n              </span>\r\n              <a\r\n                // # 은 내부링크니까 #!는 #은 내부, 그리고 ! 이 없어서 이동은 안함\r\n                // 근데 주소창에 #! 붙음\r\n                href=\"#!\"\r\n                onClick={(e) => {\r\n                  // 이거 안걸면 주소창에 #!가 붙음\r\n                  // 기본 동작 방지해줌\r\n                  e.preventDefault();\r\n                  del(item.id, index);\r\n                }}\r\n                className=\"link-secondary fs-6 float-end remove\"\r\n              >\r\n                삭제\r\n              </a>\r\n              <a\r\n                href=\"#!\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  edit(item);\r\n                }}\r\n                className=\"link-secondary fs-6 float-end edit me-2\"\r\n              >\r\n                수정\r\n              </a>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Feed;"],"sourceRoot":""}